From 5301c3c18bc2a0dc6a3a6c8ab449268306433d97 Mon Sep 17 00:00:00 2001
From: Megha Dey <megha.dey@linux.intel.com>
Date: Tue, 19 Jun 2018 18:55:51 -0700
Subject: [PATCH 3/7] efi: chainloader: implement an UEFI Exit service for shim
 in grub

When exiting, grub will call the UEFI boot-time service Exit. The
effect of this is that UEFI will jump to the entry point of the
UEFI started image. If we execute an image using shim within grub,
shim takes care of loading/parsing/relocating/executing the image.
Under this scenario, we also need to take care of the Exit call. Thus,
we need to reimplement the function to make sure we perform a jump
to the instruction after which shim executed the image.

Once we have taken care of the exit of the shim-executed image
the system Exit call is restored.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 grub-core/kern/x86_64/efi/callwrap.S | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/grub-core/kern/x86_64/efi/callwrap.S b/grub-core/kern/x86_64/efi/callwrap.S
index 1337fd9..ea1274f 100644
--- a/grub-core/kern/x86_64/efi/callwrap.S
+++ b/grub-core/kern/x86_64/efi/callwrap.S
@@ -48,6 +48,26 @@ FUNCTION(efi_wrap_1)
	addq $40, %rsp
 	ret

+FUNCTION(efi_call_foo)
+	pushq %rbp
+	pushq %r12
+	pushq %r13
+	pushq %r14
+	pushq %r15
+	movq %rsp, saved_sp(%rip)
+ 	subq $40, %rsp
+	mov  %rsi, %rcx
+	call *%rdi
+
+FUNCTION(efi_shim_exit)
+	movq saved_sp(%rip), %rsp
+	popq %r15
+	popq %r14
+	popq %r13
+	popq %r12
+	popq %rbp
+	ret
+
 FUNCTION(efi_wrap_2)
	subq $40, %rsp
 	mov  %rsi, %rcx
@@ -127,3 +147,6 @@ FUNCTION(efi_wrap_10)
 	call *%rdi
	addq $88, %rsp
 	ret
+
+	.data
+saved_sp:	.quad   0
-- 
1.9.1

