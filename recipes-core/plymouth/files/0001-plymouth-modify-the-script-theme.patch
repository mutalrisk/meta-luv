From b17a666f15e73a85a35daf8b38dd3a680601475e Mon Sep 17 00:00:00 2001
From: Megha Dey <megha.dey@linux.intel.com>
Date: Thu, 16 Feb 2017 11:34:51 -0800
Subject: [PATCH] plymouth: modify the script theme

plymouth script theme is modified add the luv splash image and the
progress bar ,change the background window color to match that of our
LUV splash image, make sure the the images are placed right in the
center of any screen it runs on.

To display the progress of the test suites, we increment the progress
bar by 1/(number of test suites) every time a new test suits starts to
run so that when the last test ssuite ends the progreaa bar is complete
100%.

Signed-off-by: Megha Dey <megha.dey@linux.intel.com>
---
 themes/script/script.script | 71 ++++++++++++++++++++++++++++++---------------
 1 file changed, 47 insertions(+), 24 deletions(-)

diff --git a/themes/script/script.script b/themes/script/script.script
index 7ea9d5e..46671be 100644
--- a/themes/script/script.script
+++ b/themes/script/script.script
@@ -1,7 +1,7 @@
 # This is an example plymouth plugin script
 
-Window.SetBackgroundTopColor(0.234, 0.43, 0.705);
-Window.SetBackgroundBottomColor(0.16, 0.25, 0.44);
+Window.SetBackgroundTopColor(0.09,0.44,0.72);
+Window.SetBackgroundBottomColor(0.09,0.44,0.72);
 
 logo.image = Image("special://logo");
 logo.sprite = Sprite(logo.image);
@@ -11,14 +11,9 @@ fun refresh_callback ()
   {
     if (status == "normal")
       {
-        logo.opacity_angle += ((2 * 3.14) / 50) * 0.5;  # 0.5 HZ
-        min_opacity = 0.3;
-        opacity = (Math.Cos(logo.opacity_angle) + 1) / 2;
-        opacity *= 1 - min_opacity;
-        opacity += min_opacity;
         logo.sprite.SetX (Window.GetX() + Window.GetWidth()  / 2 - logo.image.GetWidth()  / 2);
         logo.sprite.SetY (Window.GetY() + Window.GetHeight() / 2 - logo.image.GetHeight() / 2);
-        logo.sprite.SetOpacity (opacity);
+        logo.sprite.SetOpacity (1);
       }
     else
       {
@@ -117,18 +112,14 @@ Plymouth.SetDisplayPasswordFunction(display_password_callback);
 #----------------------------------------- Progress Bar --------------------------------
 
 progress_box.image = Image("progress_box.png");
-progress_box.sprite = Sprite(progress_box.image);
 
 progress_box.x = Window.GetX() + Window.GetWidth() / 2 - progress_box.image.GetWidth() / 2;
 progress_box.y = Window.GetY() + Window.GetHeight() * 0.75 - progress_box.image.GetHeight() / 2;
-progress_box.sprite.SetPosition(progress_box.x, progress_box.y, 0);
 
 progress_bar.original_image = Image("progress_bar.png");
-progress_bar.sprite = Sprite();
 
 progress_bar.x = Window.GetX() + Window.GetWidth()  / 2 -        progress_bar.original_image.GetWidth() / 2;
 progress_bar.y = Window.GetY() + Window.GetHeight() / 2 * 1.5  - progress_box.image.GetHeight() / 2 + (progress_box.image.GetHeight() - progress_bar.original_image.GetHeight()) / 2;
-progress_bar.sprite.SetPosition(progress_bar.x, progress_bar.y, 1);
 
 fun progress_callback (duration, progress)
   {
@@ -139,7 +130,6 @@ fun progress_callback (duration, progress)
       }
   }
 
-Plymouth.SetBootProgressFunction(progress_callback);
 
 #----------------------------------------- Quit --------------------------------
 
@@ -154,25 +144,58 @@ Plymouth.SetQuitFunction(quit_callback);
 
 message_sprites = [];
 message_sprite_count = 0;
-message_sprite_y = 10;
+message_sprite_y = progress_bar.y-30;
+num_test_suites = 6;
+count = 0;
 
 fun display_message_callback (text)
 {
-  my_image = Image.Text(text, 1, 1, 1);
+  str = String(text);
+  my_image = Image.Text(str, 1, 1, 1);
   message_sprites[message_sprite_count] = Sprite(my_image);
-  message_sprites[message_sprite_count].SetPosition(10, message_sprite_y, 10000);
-  message_sprites[message_sprite_count].text = text;
-  message_sprite_count++;
-  message_sprite_y += my_image.GetHeight();
+  message_sprites[message_sprite_count].text = str;
+
+  if (str.SubString(0,7) == "Running")
+  {
+	if (count == 0)
+	{
+		progress_box.sprite = Sprite(progress_box.image);
+		progress_box.sprite.SetPosition(progress_box.x, progress_box.y, 0);
+		progress_bar.sprite = Sprite();
+		progress_bar.sprite.SetPosition(progress_bar.x, progress_bar.y, 1);
+	}
+	progress_bar.image = progress_bar.original_image.Scale(progress_bar.original_image.GetWidth(progress_bar.original_image) * (1 / (num_test_suites +1)) * (count) , progress_bar.original_image.GetHeight());
+	progress_bar.sprite.SetImage (progress_bar.image);
+	message_sprites[message_sprite_count].SetPosition(Window.GetWidth()  / 2 - my_image.GetWidth()  / 2, progress_bar.y-30, 10000);
+	message_sprite_count++;
+	count++;
+  }
+  else
+  {
+    progress_bar.sprite = NULL;
+    progress_box.sprite = NULL;
+    if (str.SubString(0,11) == "Telemetrics")
+    {
+	message_sprites[message_sprite_count].SetPosition(Window.GetWidth()  / 2 - my_image.GetWidth()  / 2, message_sprite_y + 60,10000);
+	message_sprite_count++;
+    }
+    else
+    {
+	message_sprites[message_sprite_count].SetPosition(Window.GetWidth()  / 2 - my_image.GetWidth()  / 2, message_sprite_y, 10000);
+	message_sprite_count++;
+    }
+  }
 }
 
 fun hide_message_callback (text)
 {
-  for (i = 0; i < message_sprite_count; i++)
-    {
-      if (message_sprites[i].text == text)
-        message_sprites[i] = NULL;
-    }
+  if (message_sprites[message_sprite_count - 1].text == text)
+      message_sprites[message_sprite_count - 1] = NULL;
+  if (message_sprite_count == num_test_suites)
+  {
+    progress_bar.image = progress_bar.original_image.Scale(progress_bar.original_image.GetWidth(progress_bar.original_image) , progress_bar.original_image.GetHeight());
+    progress_bar.sprite.SetImage (progress_bar.image);
+  }
 }
 
 Plymouth.SetDisplayMessageFunction (display_message_callback);
-- 
1.9.1
